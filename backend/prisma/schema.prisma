generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  name      String?
  entries   Entry[]
  sessions  UsageSession[]
  devices   Device[]
  createdAt DateTime @default(now())
}

model Entry {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  title     String
  body      String
  mood      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model UsageSession {
  id               Int      @id @default(autoincrement())
  user             User     @relation(fields: [userId], references: [id])
  userId           Int
  startTime        DateTime @default(now())
  lastSeen         DateTime @default(now())
  endTime          DateTime?
  durationSeconds  Int?
  active           Boolean  @default(true)
}

model Device {
  id        Int           @id @default(autoincrement())
  user      User?         @relation(fields: [userId], references: [id])
  userId    Int?
  deviceId  String        @unique
  platform  String
  osVersion String?
  model     String?
  lastSeen  DateTime      @default(now())
  createdAt DateTime      @default(now())
  data      DeviceData[]
}

model DeviceData {
  id          Int      @id @default(autoincrement())
  device      Device   @relation(fields: [deviceIdRef], references: [id])
  deviceIdRef Int
  type        String
  // SQLite does not support a native Json column in Prisma's connector.
  // Store JSON payloads as strings and parse when reading/writing in the application.
  payload     String
  createdAt   DateTime @default(now())
}
